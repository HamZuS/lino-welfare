.. _welfare.tested.immersion:

===================
Immersion trainings
===================

.. How to test only this document:

    $ python setup.py test -s tests.DocsTests.test_immersion
    
    doctest init:

    >>> from __future__ import print_function
    >>> import os
    >>> os.environ['DJANGO_SETTINGS_MODULE'] = \
    ...    'lino_welfare.projects.chatelet.settings.doctests'
    >>> from lino.api.doctest import *

A technical tour into the :mod:`lino_welfare.modlib.immersion` plugin.

.. contents::
   :depth: 2

This document uses the :mod:`lino_welfare.projects.chatelet` test
database:

>>> print(settings.SETTINGS_MODULE)
lino_welfare.projects.chatelet.settings.doctests

>>> dd.today()
datetime.date(2014, 5, 22)


Configuration
=============

A system administrator can select :menuselection:`Configure -->
Integration --> Immersion training types`  to configure the list of
"immersion training types" (:class:`immersion.ContractType
<lino_welfare.modlib.immersion.models.ContractType>`).

The default data for this table is generated by the :mod:`std
<lino_welfare.modlib.immersion.fixtures.std>` fixture:

>>> rt.show(immersion.ContractTypes)
... #doctest: +ELLIPSIS +NORMALIZE_WHITESPACE -REPORT_UDIFF
===================== =========================== ===================== ==================== ================
 Designation           Designation (fr)            Designation (de)      Examination Policy   Template
--------------------- --------------------------- --------------------- -------------------- ----------------
 Immersion training    Stage d'immersion           Immersion training                         StageForem.odt
 Internal engagement   Mise en situation interne   Internal engagement                        Default.odt
 MISIP                 MISIP                       MISIP                                      Default.odt
===================== =========================== ===================== ==================== ================
<BLANKLINE>


Demo data
=========

:class:`lino_welfare.modlib.immersion.models.Contract`

>>> rt.show(immersion.Contracts)
... #doctest: +ELLIPSIS +NORMALIZE_WHITESPACE -REPORT_UDIFF
==== ========================= ===================== ============== =============== ================== =========================
 ID   Client                    Company               applies from   applies until   responsible (IS)   Immersion training type
---- ------------------------- --------------------- -------------- --------------- ------------------ -------------------------
 1    EMONTS Daniel (128)       Bäckerei Ausdemwald   10/29/12       2/21/14         Alicia Allmanns    Immersion training
 2    EMONTS Daniel (128)       Bäckerei Mießen       2/22/14        12/31/14        Caroline Carnol    Internal engagement
 3    HILGERS Hildegard (133)   Rumma & Ko OÜ         12/3/12        10/11/13        Alicia Allmanns    MISIP
 4    LAZARUS Line (144)        Bäckerei Schmitz      1/7/13         2/6/13          Alicia Allmanns    Immersion training
 5    RADERMACHER Guido (159)   Rumma & Ko OÜ         2/11/13        6/6/14          Alicia Allmanns    Internal engagement
 6    RADERMACHER Guido (159)   Bäckerei Ausdemwald   6/7/14         4/15/15         Mélanie Mélard     MISIP
==== ========================= ===================== ============== =============== ================== =========================
<BLANKLINE>


Immersion trainings with external partner
=========================================

French-speaking PCSWs use a custom template imposed by FOREM when
printing immersion trainings with some external partner.

>>> obj = immersion.Contract.objects.get(pk=1)
>>> print(unicode(obj.company))
Bäckerei Ausdemwald
>>> bm = printing.BuildMethods.appyodt
>>> ex = obj.printed_by
>>> ex.do_print.bound_action.action.get_print_templates(bm, ex)
[u'StageForem.odt']
